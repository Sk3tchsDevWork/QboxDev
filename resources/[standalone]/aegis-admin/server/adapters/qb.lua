Aegis = Aegis or {}; Aegis.Adapters = Aegis.Adapters or {}; local QBCore=exports['qb-core']:GetCoreObject(); local A={} function A.Framework() return 'qb' end function A.GetPlayers() local list={} for _,id in pairs(QBCore.Functions.GetPlayers()) do local name=GetPlayerName(id) or ('[%s]'):format(id) local ped=GetPlayerPed(id); local c=GetEntityCoords(ped); list[#list+1]={id=id,name=name,coords={c.x,c.y,c.z}} end return list end function A.GetInventory(t) local P=QBCore.Functions.GetPlayer(t); if not P then return {} end local items=P.PlayerData and P.PlayerData.items or {}; local out={} for slot,data in pairs(items or {}) do if data then out[#out+1]={name=data.name,amount=data.amount or data.count or 1,slot=slot,info=data.info or {}} end end return out end function A.GiveItem(t,i,a) local P=QBCore.Functions.GetPlayer(t); if not P then return false,'no player' end a=tonumber(a) or 1 return P.Functions.AddItem(i,a) and true or false end function A.TakeItem(t,i,a) local P=QBCore.Functions.GetPlayer(t); if not P then return false,'no player' end a=tonumber(a) or 1 return P.Functions.RemoveItem(i,a) and true or false end function A.SetJobGrade(t,j,g) local P=QBCore.Functions.GetPlayer(t); if not P then return false,'no player' end g=tonumber(g) or 0 P.Functions.SetJob(j,g) return true end function A.GetMoney(t) local P=QBCore.Functions.GetPlayer(t); if not P then return {cash=0,bank=0} end return {cash=P.Functions.GetMoney('cash') or 0, bank=P.Functions.GetMoney('bank') or 0} end function A.GiveCash(t,amt) local P=QBCore.Functions.GetPlayer(t); if not P then return false,'no player' end amt=tonumber(amt) or 0 P.Functions.AddMoney('cash',amt) return true end function A.SetBank(t,amt) local P=QBCore.Functions.GetPlayer(t); if not P then return false,'no player' end amt=tonumber(amt) or 0 P.Functions.SetMoney('bank',amt) return true end Aegis.Adapters.qb=A